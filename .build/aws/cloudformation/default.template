{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a basic elasticsearch/kibana cluster environment.",
    "Parameters": {
        "AvailabilityZone": {
            "Type": "String",
            "Description": "Availability Zone (AZ) to start the cluster in.",
            "Default": "us-east-1c"
        },
        "DisableApiTermination": {
            "Type": "String",
            "Description": "Prevent EC2 instance termination (if active, requires to active enable it to successfully delete the stack).",
            "Default": "false"
        },
        "InstanceProfile": {
            "Type": "String",
            "Description": "IAM instance profile to use within the cluster."
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t1.micro",
            "AllowedValues": [
                "t1.micro",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "cc2.8xlarge",
                "cr1.8xlarge",
                "cg1.4xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 key pair to enable remote access to the EC2 instance.",
            "Type": "String"
        },
        "ClusterName": {
            "Type": "String",
            "Description": "A unique name for the cluster.",
            "Default": "cfn-logstash"
        },
        "ExternalAccessCidrRange": {
            "Description": "The CIDR IP address range for remote access to the EC2 instances via tcp:22, tcp:80 (default: 127.0.0.1/32, i.e. none).",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "127.0.0.1/32",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR IP address range of the form x.x.x.x/x."
        },
        "ElasticsearchPrimaryVolumeSize": {
            "Description": "Size of a dedicated EBS volume to be attached to the EC2 instance.",
            "Type": "Number",
            "Default": "64"
        },
        "RepositoryBranch": {
            "Description": "Repository branch to bootstrap from.",
            "Type": "String",
            "Default": "master"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMI": "ami-d0f89fb9"
            }
        }
    },
    "Resources": {
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Elasticsearch Security Group",
                "SecurityGroupIngress": [{
                    "IpProtocol": "icmp",
                    "FromPort": "3",
                    "ToPort": "4",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": {
                        "Ref": "ExternalAccessCidrRange"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": {
                        "Ref": "ExternalAccessCidrRange"
                    }
                }]
            }
        },
        "SecurityGroupInterElasticsearch9200": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "9200",
                "ToPort": "9299",
                "SourceSecurityGroupName": {
                    "Ref": "SecurityGroup"
                }
            }
        },
       "SecurityGroupInterElasticsearch9300": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "9300",
                "ToPort": "9399",
                "SourceSecurityGroupName": {
                    "Ref": "SecurityGroup"
                }
            }
        },
        "SecurityGroupInterRedis": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "6379",
                "ToPort": "6379",
                "SourceSecurityGroupName": {
                    "Ref": "SecurityGroup"
                }
            }
        },
        "ElasticsearchPrimaryVolume": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": {
                    "Ref": "ElasticsearchPrimaryVolumeSize"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                }
            },
            "DeletionPolicy": "Snapshot"
        },
        "ElasticsearchPrimaryInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "files" : {
                            "/app/.env" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "export AWS_DEFAULT_REGION=", { "Ref": "AWS::Region" }, "\n",
                                            "export APP_ROOT_DIR=/app", "\n",
                                            "export APP_APP_DIR=/app/app", "\n",
                                            "export APP_VENDOR_DIR=/app/vendor", "\n",
                                            "export APP_LOG_DIR=/app/var/log", "\n",
                                            "export APP_RUN_DIR=/app/var/run", "\n",
                                            "export APP_TMP_DIR=/app/tmp", "\n",
                                            "export APP_DATA_DIR=/app/data", "\n",
                                            "export APP_USER=ubuntu", "\n",
                                            "export APP_CONFIG_ES_CLUSTER=", { "Ref" : "ClusterName" }, "\n",
                                            "export APP_CONFIG_ES_IPADDRESS=`ec2metadata --local-ipv4`", "\n",
                                            "export APP_CONFIG_ES_AWS_EC2_GROUP=", { "Ref": "SecurityGroup" }, "\n"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000755"
                            },
                            "/home/ubuntu/provision" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "#!/bin/bash", "\n",
                                            "set -e", "\n",
                                            "/app/app/.build/ubuntu-12/provision.sh", "\n",
                                            "/app/app/bin/data-mount-device xvdf ", { "Ref" : "ElasticsearchPrimaryVolume" }, " ubuntu", "\n"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000555"
                            },
                            "/home/ubuntu/bootstrap" : {
                                "source" : {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://raw.github.com/cityindex/elasticsearch-development-flow/",
                                            { "Ref": "RepositoryBranch" },
                                            "/bin/bootstrap"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000555"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "DisableApiTermination": {
                    "Ref": "DisableApiTermination"
                },
                "ImageId": {
                    "Fn::FindInMap": ["RegionMap",
                    {
                        "Ref": "AWS::Region"
                    }, "AMI"]
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [{
                    "Ref": "SecurityGroup"
                }],
                "Volumes": [{
                    "VolumeId": {
                        "Ref": "ElasticsearchPrimaryVolume"
                    },
                    "Device": "/dev/sdf"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-",
                            [
                                { "Ref" : "ClusterName" },
                                "elasticsearch-p0"
                            ]
                        ]
                    },
                    "PropagateAtLaunch": "true"
                }],
                "UserData" : {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash", "\n",
                                "# Error handling helper function\n",
                                "function error_exit\n",
                                "{\n",
                                " cfn-signal --exit-code $? --reason \"$1\" '", { "Ref": "ClusterWaitConditionHandle" }, "'\n",
                                " exit $?\n",
                                "}\n",
                                "apt-get update", "\n",
                                "apt-get -y install python-pip", "\n",
                                "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz", "\n",
                                "cfn-init --verbose ",
                                " --region ", { "Ref": "AWS::Region" },
                                " --stack ", { "Ref": "AWS::StackName" },
                                " --resource ElasticsearchPrimaryInstance ",
                                " || error_exit 'Failed to run cfn-init'", "\n",
                                "\n",
                                "sudo -H -u ubuntu /home/ubuntu/bootstrap /home/ubuntu/provision elasticsearch ", { "Ref": "RepositoryBranch" }, "\n",
                                "/app/app/.build/dev_server/extra.sh", "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ElasticsearchReplicaInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "files" : {
                            "/app/.env" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "export AWS_DEFAULT_REGION=", { "Ref": "AWS::Region" }, "\n",
                                            "export APP_ROOT_DIR=/app", "\n",
                                            "export APP_APP_DIR=/app/app", "\n",
                                            "export APP_VENDOR_DIR=/app/vendor", "\n",
                                            "export APP_LOG_DIR=/app/var/log", "\n",
                                            "export APP_RUN_DIR=/app/var/run", "\n",
                                            "export APP_TMP_DIR=/app/tmp", "\n",
                                            "export APP_DATA_DIR=/app/data", "\n",
                                            "export APP_USER=ubuntu", "\n",
                                            "export APP_CONFIG_ES_CLUSTER=", { "Ref" : "ClusterName" }, "\n",
                                            "export APP_CONFIG_ES_IPADDRESS=`ec2metadata --local-ipv4`", "\n",
                                            "export APP_CONFIG_ES_AWS_EC2_GROUP=", { "Ref": "SecurityGroup" }, "\n"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000755"
                            },
                            "/home/ubuntu/provision" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "#!/bin/bash", "\n",
                                            "set -e", "\n",
                                            "/app/app/.build/ubuntu-12/provision.sh", "\n",
                                            "mkdir -p /mnt/app-data", "\n",
                                            "chown ubuntu:ubuntu /mnt/app-data", "\n",
                                            "ln -s /app/data /mnt/app-data", "\n"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000555"
                            },
                            "/home/ubuntu/bootstrap" : {
                                "source" : {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://raw.github.com/cityindex/elasticsearch-development-flow/",
                                            { "Ref": "RepositoryBranch" },
                                            "/bin/bootstrap"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000555"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "DisableApiTermination": {
                    "Ref": "DisableApiTermination"
                },
                "ImageId": {
                    "Fn::FindInMap": ["RegionMap",
                    {
                        "Ref": "AWS::Region"
                    }, "AMI"]
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [{
                    "Ref": "SecurityGroup"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-",
                            [
                                { "Ref" : "ClusterName" },
                                "elasticsearch-r0"
                            ]
                        ]
                    },
                    "PropagateAtLaunch": "true"
                }],
                "UserData" : {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash", "\n",
                                "# Error handling helper function\n",
                                "function error_exit\n",
                                "{\n",
                                " cfn-signal --exit-code $? --reason \"$1\" '", { "Ref": "ClusterWaitConditionHandle" }, "'\n",
                                " exit $?\n",
                                "}\n",
                                "apt-get update", "\n",
                                "apt-get -y install python-pip", "\n",
                                "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz", "\n",
                                "cfn-init --verbose ",
                                " --region ", { "Ref": "AWS::Region" },
                                " --stack ", { "Ref": "AWS::StackName" },
                                " --resource ElasticsearchReplicaInstance ",
                                " || error_exit 'Failed to run cfn-init'", "\n",
                                "\n",
                                "sudo -H -u ubuntu /home/ubuntu/bootstrap .build/ubuntu-12/provision.sh elasticsearch,kibana ", { "Ref": "RepositoryBranch" }, "\n",
                                "/app/app/.build/dev_server/extra.sh", "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "BrokerInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "files" : {
                            "/app/.env" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "export AWS_DEFAULT_REGION=", { "Ref": "AWS::Region" }, "\n",
                                            "export APP_ROOT_DIR=/app", "\n",
                                            "export APP_APP_DIR=/app/app", "\n",
                                            "export APP_VENDOR_DIR=/app/vendor", "\n",
                                            "export APP_LOG_DIR=/app/var/log", "\n",
                                            "export APP_RUN_DIR=/app/var/run", "\n",
                                            "export APP_TMP_DIR=/app/tmp", "\n",
                                            "export APP_DATA_DIR=/app/data", "\n",
                                            "export APP_USER=ubuntu", "\n",
                                            "export APP_CONFIG_ES_IPADDRESS=", { "Fn::GetAtt" : [ "ElasticsearchPrimaryInstance", "PrivateIp" ] }, "\n",
                                            "export APP_CONFIG_REDIS_IPADDRESS=`ec2metadata --local-ipv4`", "\n",
                                            "export APP_CONFIG_REDIS_KEY=logstash", "\n"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000755"
                            },
                            "/home/ubuntu/bootstrap" : {
                                "source" : {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://raw.github.com/cityindex/elasticsearch-development-flow/",
                                            { "Ref": "RepositoryBranch" },
                                            "/bin/bootstrap"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000555"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "DisableApiTermination": {
                    "Ref": "DisableApiTermination"
                },
                "ImageId": {
                    "Fn::FindInMap": ["RegionMap",
                    {
                        "Ref": "AWS::Region"
                    }, "AMI"]
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [{
                    "Ref": "SecurityGroup"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-",
                            [
                                { "Ref" : "ClusterName" },
                                "broker-n0"
                            ]
                        ]
                    },
                    "PropagateAtLaunch": "true"
                }],
                "UserData" : {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash", "\n",
                                "# Error handling helper function\n",
                                "function error_exit\n",
                                "{\n",
                                " cfn-signal --exit-code $? --reason \"$1\" '", { "Ref": "ClusterWaitConditionHandle" }, "'\n",
                                " exit $?\n",
                                "}\n",
                                "apt-get update", "\n",
                                "apt-get -y install python-pip", "\n",
                                "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz", "\n",
                                "cfn-init --verbose ",
                                " --region ", { "Ref": "AWS::Region" },
                                " --stack ", { "Ref": "AWS::StackName" },
                                " --resource BrokerInstance ",
                                " || error_exit 'Failed to run cfn-init'", "\n",
                                "\n",
                                "sudo -H -u ubuntu /home/ubuntu/bootstrap .build/ubuntu-12/provision.sh logstash,redis,logstash_redis ", { "Ref": "RepositoryBranch" }, "\n",
                                "/app/app/.build/dev_server/extra.sh", "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ShipperInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "files" : {
                            "/app/.env" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "export AWS_DEFAULT_REGION=", { "Ref": "AWS::Region" }, "\n",
                                            "export APP_ROOT_DIR=/app", "\n",
                                            "export APP_APP_DIR=/app/app", "\n",
                                            "export APP_VENDOR_DIR=/app/vendor", "\n",
                                            "export APP_LOG_DIR=/app/var/log", "\n",
                                            "export APP_RUN_DIR=/app/var/run", "\n",
                                            "export APP_TMP_DIR=/app/tmp", "\n",
                                            "export APP_DATA_DIR=/app/data", "\n",
                                            "export APP_USER=ubuntu", "\n",
                                            "export APP_CONFIG_REDIS_IPADDRESS=", { "Fn::GetAtt" : [ "BrokerInstance", "PrivateIp" ] }, "\n",
                                            "export APP_CONFIG_REDIS_KEY=logstash", "\n"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000755"
                            },
                            "/home/ubuntu/bootstrap" : {
                                "source" : {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://raw.github.com/cityindex/elasticsearch-development-flow/",
                                            { "Ref": "RepositoryBranch" },
                                            "/bin/bootstrap"
                                        ]
                                    ]
                                },
                                "group" : "ubuntu",
                                "owner" : "ubuntu",
                                "mode" : "000555"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "DisableApiTermination": {
                    "Ref": "DisableApiTermination"
                },
                "ImageId": {
                    "Fn::FindInMap": ["RegionMap",
                    {
                        "Ref": "AWS::Region"
                    }, "AMI"]
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [{
                    "Ref": "SecurityGroup"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-",
                            [
                                { "Ref" : "ClusterName" },
                                "shipper-n0"
                            ]
                        ]
                    },
                    "PropagateAtLaunch": "true"
                }],
                "UserData" : {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash", "\n",
                                "# Error handling helper function\n",
                                "function error_exit\n",
                                "{\n",
                                " cfn-signal --exit-code $? --reason \"$1\" '", { "Ref": "ClusterWaitConditionHandle" }, "'\n",
                                " exit $?\n",
                                "}\n",
                                "apt-get update", "\n",
                                "apt-get -y install python-pip", "\n",
                                "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz", "\n",
                                "cfn-init --verbose ",
                                " --region ", { "Ref": "AWS::Region" },
                                " --stack ", { "Ref": "AWS::StackName" },
                                " --resource ShipperInstance ",
                                " || error_exit 'Failed to run cfn-init'", "\n",
                                "\n",
                                "sudo -H -u ubuntu /home/ubuntu/bootstrap .build/ubuntu-12/provision.sh logstash ", { "Ref": "RepositoryBranch" }, "\n",
                                "/app/app/.build/dev_server/extra.sh", "\n",
                                "# Signal success\n",
                                "cfn-signal --exit-code 0 --reason 'Elasticsearch cluster setup complete' '", { "Ref": "ClusterWaitConditionHandle" }, "'\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ClusterWaitConditionHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ClusterWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "ShipperInstance",
            "Properties": {
                "Handle": {
                    "Ref": "ClusterWaitConditionHandle"
                },
                "Timeout": "480"
            }
        }
    },
    "Outputs": {
        "WebInterface": {
            "Description": "Access the Kibana frontend.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        { "Fn::GetAtt" : [ "ElasticsearchReplicaInstance", "PublicDnsName" ] },
                        "/"
                    ]
                ]
            }
        },
        "LogShipper": {
            "Description": "Ship log messages into the system.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "ssh ubuntu@",
                        { "Fn::GetAtt" : [ "ShipperInstance", "PublicDnsName" ] }
                    ]
                ]
            }
        }
    }
}
