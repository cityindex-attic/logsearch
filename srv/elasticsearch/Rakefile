namespace :elasticsearch do
  desc 'Run Elasticsearch service'
  task :run => :envdeps do
    process_erb("#{ENV['APP_APP_DIR']}/srv/elasticsearch/config/default.json.erb", "#{ENV['APP_APP_DIR']}/srv/elasticsearch/config/default.json")

    exec "'#{ENV['APP_VENDOR_DIR']}/elasticsearch/bin/elasticsearch' -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+PrintCommandLineFlags -XX:+PrintFlagsFinal -XX:+PrintPromotionFailure -XX:+PrintReferenceGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:PermSize=256m  -XX:MaxPermSize=256m -XX:+AggressiveOpts -XX:+UseCompressedOops -XX:HeapDumpPath=#{ENV['APP_TMP_DIR']}/heap-dump/ --config='#{ENV['APP_APP_DIR']}/srv/elasticsearch/config/default.json' --pidfile='#{ENV['APP_RUN_DIR']}/elasticsearch.pid'"
  end

  desc 'Delete all Elastic Search data using DELETE all data query to http://127.0.0.1:9200'
  task :delete_all_data_by_query do
    puts "---> Deleting all Elastic Search data"
    sh "curl -XDELETE 'http://127.0.0.1:9200/_all'"
    puts "---> Done."
  end

  task :envdeps do
    if File.symlink?("#{ENV['APP_TMP_DIR']}/heap-dump")
      # hacky; assumes sudo may be necessary (e.g. creating a root dir in /mnt on ec2)
      pt = File.readlink("#{ENV['APP_TMP_DIR']}/heap-dump")

      if !File.exists?(pt)
        sh "sudo mkdir -p #{pt}"
        sh "sudo chown #{ENV['APP_USER']}:#{ENV['APP_USER']} #{pt}"
      end
    end

    if File.symlink?("#{ENV['APP_DATA_DIR']}")
      # hacky; assumes sudo may be necessary (e.g. creating a root dir in /mnt on ec2)
      pt = File.readlink("#{ENV['APP_DATA_DIR']}")

      if !File.exists?(pt)
        sh "sudo mkdir -p #{pt}"
        sh "sudo chown #{ENV['APP_USER']}:#{ENV['APP_USER']} #{pt}"
      end
    end

    if !ENV['ES_HEAP_SIZE']
      # dynamically raise the heap size to about half the installed memory
      mem = `cat /proc/meminfo | grep MemTotal | awk '{ print $2 $3 }'`

      if mem =~ /^(\d+)kB$/
        mem = $1.to_i * 1024
      elsif mem =~ /^(\d+)MB$/
        mem = $1.to_i * 1048576
      elsif mem =~ /^(\d+)GB$/
        mem = $1.to_i * 1073741824
      end

      ENV['ES_HEAP_SIZE'] = (mem * 0.46).floor.to_s
    end
  end
end
